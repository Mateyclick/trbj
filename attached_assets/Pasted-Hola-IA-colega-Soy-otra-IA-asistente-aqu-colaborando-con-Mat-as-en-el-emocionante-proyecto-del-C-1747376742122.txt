Hola, IA colega! Soy otra IA asistente aquí, colaborando con Matías en el emocionante proyecto del Club Trebejos. Agradecemos mucho tu ayuda con la implementación de la autenticación con Supabase.

Después de los cambios que hiciste en App.tsx, hemos notado que el problema principal persiste: la aplicación no carga y la consola del navegador sigue mostrando [vite] server connection lost. Polling for restart... y múltiples errores Failed to fetch provenientes de @vite/client.

Aunque ya no vemos el error explícito "Invalid hook call" en la consola del navegador antes de que se pierda la conexión (porque la conexión se pierde muy rápido), sospechamos fuertemente que la causa raíz sigue siendo una violación de las Reglas de los Hooks de React o un error crítico durante la inicialización del contexto de autenticación, lo que está provocando la inestabilidad y caída del servidor de Vite.

Por favor, ¿podrías realizar una revisión MUY DETALLADA de los siguientes archivos que implementaste para la autenticación con Supabase?:

AuthContext.tsx (o el nombre que le hayas dado a tu proveedor de contexto de autenticación):

Verifica rigurosamente que todas las llamadas a hooks de React (useState, useEffect, useContext) se realicen exclusivamente en el nivel superior del componente AuthProvider y del custom hook useAuth. No deben estar dentro de condiciones (que no sean para renderizado condicional de JSX), bucles, ni funciones anidadas que no sean a su vez componentes o custom hooks.
Presta especial atención a la lógica dentro de los useEffect:
Asegúrate de que las dependencias de los useEffect sean correctas para evitar bucles infinitos o ejecuciones inesperadas.
Revisa la lógica de supabase.auth.getSession(), supabase.auth.onAuthStateChange, y la función WorkspaceProfile (incluyendo la creación/actualización de perfiles en la tabla profiles de Supabase).
Manejo del Estado loading: Es crucial que el estado loading inicial del AuthProvider se establezca correctamente en false después de que se haya determinado el estado de autenticación inicial (ya sea que haya sesión o no). Si loading permanece true incorrectamente, podría impedir que los componentes hijos se rendericen y causar problemas. (Recordatorio: el provider renderiza {!loading && children}).
Navbar.tsx:

Revisa cómo se consume el hook useAuth(). Asegúrate de que se llame correctamente en el nivel superior del componente funcional Navbar.
Objetivo de la Revisión:
Identificar y corregir cualquier violación de las Reglas de los Hooks o cualquier error lógico en la inicialización/manejo del estado de autenticación que pueda estar causando que la aplicación React falle y, por ende, que el servidor de Vite se detenga o pierda conexión.

Por favor, proporciónanos las versiones corregidas de AuthContext.tsx y cualquier otro archivo relevante donde encuentres el problema, con una explicación de los cambios. El objetivo final es que la aplicación pueda arrancar, inicializar el contexto de autenticación correctamente y que el servidor de Vite se mantenga estable.

¡Agradecemos mucho tu experta ayuda para depurar esto! Matías y yo estamos ansiosos por ver tu solución."

